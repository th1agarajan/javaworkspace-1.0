def recipients = "rm.thiagarajan@hotmail.com,javaworkspace@gmail.com"

pipeline {

	agent {
		label 'cf'
	}

	tools {
		jdk "jdk1.8"
		
	}

	options {
		buildDiscarder(logRotator(numToKeepStr:'10'))
		disableConcurrentBuilds()
		timeout(time: 30, unit: 'MINUTES')
	}

	stages {
		stage('Setup') {
			steps  {
			echo "Setup Success"
			}
		}

		stage('Build') {
			steps  {
			echo "Build Success"
			}
		}

		stage('Deploy') {
			steps  {
			echo "Deploy Success"
			}
		}
	}

	post {
		success {
			echo "Send build success notification to " + recipients
			emailext subject: "SUCCESS: ${env.JOB_NAME} (${env.BUILD_NUMBER})",
				body: "Build ${env.BUILD_URL} was a success.\n\n" +
					"\tChange  ${env.RUN_CHANGES_DISPLAY_URL}\n\n" +
					"\tRun     ${env.RUN_DISPLAY_URL}\n\n",
				to: recipients,
				mimeType: 'text/html',
				attachmentsPattern: '%JENKINS_HOME%/changelog.xml'
		}

		failure {
			echo "Send build failure notification to " + recipients
			emailext subject: "FAILURE: ${env.JOB_NAME} (${env.BUILD_NUMBER})",
				body: "Build ${env.BUILD_URL}/console is failing. Please investigate!\n\n" +
					"\tChange  ${env.RUN_CHANGES_DISPLAY_URL}\n\n" +
					"\tRun     ${env.RUN_DISPLAY_URL}\n\n",
				to: recipients,
				mimeType: 'text/html',
				attachmentsPattern: '%JENKINS_HOME%/changelog.xml'
	        }
	}
}
	



			